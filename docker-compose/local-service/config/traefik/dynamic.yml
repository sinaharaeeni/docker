# Dynamic Configuration for Traefik
http:
  routers:
    zabbix:
      rule: "Host(`zabbix.sinaharaeeni.ir`)"
      service: zabbix
      entryPoints:
        - web

    portainer:
      rule: "Host(`portainer.sinaharaeeni.ir`)"
      service: portainer
      entryPoints:
        - web

    jupyter:
      rule: "Host(`jupyter.sinaharaeeni.ir`)"
      service: jupyter
      entryPoints:
        - web

    traefik-router:
      rule: "Host(`traefik.sinaharaeeni.ir`)"
      service: api@internal
      entryPoints:
        - web

    grafana:
      rule: "Host(`grafana.sinaharaeeni.ir`)"
      service: grafana
      entryPoints:
        - web

    nexus:
      rule: "Host(`nexus.sinaharaeeni.ir`)"
      service: nexus
      entryPoints:
        - web

    prometheus:
      rule: "Host(`prometheus.sinaharaeeni.ir`)"
      service: prometheus
      entryPoints:
        - web

    elasticsearch:
      rule: "Host(`elastic.sinaharaeeni.ir`)"
      service: elasticsearch
      entryPoints:
        - web

    kibana:
      rule: "Host(`kibana.sinaharaeeni.ir`)"
      service: kibana
      entryPoints:
        - web

  services:
    zabbix:
      loadBalancer:
        servers:
          - url: "http://192.168.1.241"

    jupyter:
      loadBalancer:
        servers:
          - url: "http://192.168.1.242:8888"

    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

    nexus:
      loadBalancer:
        servers:
          - url: "http://nexus:8081"

    prometheus:
      loadBalancer:
        servers:
          - url: "http://prometheus:9090"

    portainer:
      loadBalancer:
        servers:
          - url: "http://portainer:9000"

    elasticsearch:
      loadBalancer:
        servers:
          - url: "http://elasticsearch:9200"

    kibana:
      loadBalancer:
        servers:
          - url: "http://kibana:5601"

  middlewares:
    fail2ban-local:
      plugin:
        fail2ban:
          allowlist:
            ip: 192.168.1.0/24
          rules:
            bantime: 3h
            enabled: "true"
            findtime: 10m
            maxretry: "4"
            statuscode: 400,401,403-499

    geoblock-ir:
      plugin:
        geoblock:
          silentStartUp: false
          allowLocalRequests: true
          logLocalRequests: false
          logAllowedRequests: false
          logApiRequests: true
          api: "https://get.geojs.io/v1/ip/country/{ip}"
          apiTimeoutMs: 750
          cacheSize: 15
          forceMonthlyUpdate: true
          allowUnknownCountries: false
          unknownCountryApiResponse: "nil"
          httpStatusCodeDeniedRequest: 403
          countries:
            - IR

    rate-limit:
      plugin:
        limit-contrary:
          average: 5
          burst: 10
