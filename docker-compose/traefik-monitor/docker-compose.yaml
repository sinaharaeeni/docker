# Build for run traefik-monitor
# Last modify 2024/01/27
# Version 1.0

version: '3.3'

networks:
  local:

volumes:
  nginx_conf:
  httpd_conf:
  prometheus_data:
  grafana_data:

services:
  traefik:
    container_name: traefik
#    image: docker.io/library/traefik:v2.10.7
    image: repo.sinacomsys.local:8082/general/traefik:v2.10.7
    restart: always
    command:
    - --log.level=DEBUG
    - --api.insecure=true
    - --providers.docker=true
    - --providers.docker.exposedbydefault=true
    - --entrypoints.web.address=:80
    - --entrypoints.websecure.address=:443
    - --metrics.prometheus=true
    - --metrics.prometheus.addEntryPointsLabels=true
    - --metrics.prometheus.addrouterslabels=true
    - --metrics.prometheus.addServicesLabels=true
    - --tracing.jaeger=true
    - --tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling
    - --tracing.jaeger.samplingType=const
    - --tracing.jaeger.samplingParam=1.0
    - --tracing.jaeger.localAgentHostPort=jaeger:6831
    - --tracing.jaeger.propagation=jaeger
    - --tracing.jaeger.collector.endpoint=http://jaeger:14268/api/traces?format=jaeger.thrift
    ports:
    - 80:80
    - 443:443
    networks:
    - local
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.routers.traefik.rule=Host(`traefik.sinaharaeeni.ir`)

  nginx:
#    image: docker.io/library/nginx:1.25.3
    image: repo.sinacomsys.local:8082/general/nginx:1.25.3
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.services.nginx.loadbalancer.server.port=80
      - traefik.http.routers.nginx.rule=PathPrefix(`/`)
    volumes:
      - ./file/index-home.html:/usr/share/nginx/html/index-home.html
      - ./file/index-webapp.html:/usr/share/nginx/html/index-webapp.html
      - ./file/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - local
    deploy:
      mode: replicated
      replicas: 1

  httpd:
    container_name: httpd
#    image: docker.io/library/httpd:2.4.58
    image: repo.sinacomsys.local:8082/general/httpd:2.4.58
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.services.httpd.loadbalancer.server.port=80
      - traefik.http.routers.httpd.rule=PathPrefix(`/local`)
    volumes:
      - ./file/index-api.html:/usr/local/apache2/htdocs/index.html
      - httpd_conf:/usr/local/apache2/conf
    networks:
      - local

  whoami:
#    image: docker.io/traefik/whoami:v1.10.1
    image: repo.sinacomsys.local:8082/general/traefik/whoami:v1.10.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.sinaharaeeni.ir`)
      - traefik.http.services.whoami.loadbalancer.server.port=80
    networks:
      - local

  prometheus:
    container_name: prometheus
#    image: docker.io/prom/prometheus:v2.48.1
    image: repo.sinacomsys.local:8082/general/prom/prometheus:v2.48.1
    networks:
    - local
    volumes:
    - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus_data:/prometheus
    labels:
      - traefik.enable=true
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.routers.prometheus.rule=Host(`prometheus.sinaharaeeni.ir`)
    restart: always

  grafana:
    container_name: grafana
#    image: docker.io/grafana/grafana:10.2.3
    image: repo.sinacomsys.local:8082/general/grafana/grafana:10.2.3
    environment:
    - GF_SECURITY_ADMIN_USER=admin
    - GF_SECURITY_ADMIN_PASSWORD=Sin@2022
    networks:
    - local
    volumes:
    - grafana_data:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.rule=Host(`grafana.sinaharaeeni.ir`)
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 16686:16686
      - 9411:9411    # Zipkin compatibility port
    labels:
      - traefik.enable=true
      - traefik.http.services.jaeger.loadbalancer.server.port=16686
      - traefik.http.routers.jaeger.rule=Host(`jaeger.sinaharaeeni.ir`)